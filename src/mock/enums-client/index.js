export const Enum = {
  schemaTypes: {
    entity: 'entity',
    visual: 1,
    layer: 'layer',
    summary: 'summary',
    form: 'form',
    posForm: 'posForm',
    bType: 5,
    touchForm: 'touchForm',
    touchSummary: 'touchSummary',
    valueSet: 'valueSet',
  },
    templates: {
    simpleBase: 'simpleBaseTemplate',
    simpleBaseArea: 'main',
    drawers: 'drawersTemplate',
    drawersAreas: {
      right: 'right',
      left: 'left',
      top: 'top',
      bottom: 'bottom',
    },
    lightDrawers: 'lightDrawersTemplate',
    lightDrawersAreas: {
      right: 'right',
      left: 'left',
      top: 'top',
      bottom: 'bottom',
    },
    tacticalDrawers: 'tacticalDrawersTemplate',
    tacticalDrawersAreas: {
      right: 'right',
      left: 'left',
      top: 'top',
      bottom: 'bottom',
    },
    touchPopUps: 'touchPopUpsTemplate',
    touchPopUpArea: 'main',
    popUps: 'popUpsTemplate',
    popUpArea: 'popUpsArea',
    frameMenu: 'frameMenuTemplate',
    chats: 'chatsTemplate',
    chatsArea: 'main',
    notifications: 'notificationsTemplate',
    notificationsTactical: 'notificationsTactical',
    notificationsArea: 'main',
    fullscreen: 'fullscreenTemplate',
    fullscreenArea: 'main',
    contextMenus: 'contextMenusTemplate',
    contextMenusArea: 'main',
    bookmarkBypass: 'bookmarkBypassTemplate',
  },
  filterRelationType: {
    server: 'server',
    client: 'client',
  },
  filterComponentType: {
    switch: 'switch',
    multiSelect: 'multiselect',
    multiSelectAllSellected: 'multiSelectAllSellected'
  },
  persistenceTypes: {
    default: 0,
    locationHistory: 1,
  },
  comparator: {
    equal: '=',
    greaterThan: '>',
    greaterThanOrEqual: '>=',
    lowerThan: '<',
    lowerThanOrEqual: '<=',
  },
  navigationAction: {
    main: 0,
    layers: 1,
    tasks: 2,
    command: 3,
    settings: 4,
  },
  draggingItemType: {
    queueItem: 'queueItem',
  },
  draggingContainer: {
    primary: 'primaryQueue',
    secondary: 'secondaryQueue',
  },
  draggingComponent: {
    assaultMission: 'assaultMission',
    layer: 'layer',
  },
  uiCommandName: {
    editSummary: 'editSummary',
  },
  criminalType: {
    thief: 0,
    murderer: 1,
  },
  crimeEventSituation: {
    untreated: 0,
    inTreatment: 1,
    finish: 2,
  },
  gridType: {
    mapGrid: 'MapGrid',
  },
  gridFilterType: {
    Text: 'TextFilter',
    Select: 'SelectFilter',
    Number: 'NumberFilter',
    Date: 'DateFilter',
    Custom: 'CustomFilter',
  },
  areaType: {
    right: 'right',
    left: 'left',
    bottom: 'bottom',
    main: 'main',
    general: 'general',
  },
  chatState: {
    detailChatWindow: 'detailChatWindow',
    openChatWindow: 'openChatWindow',
    minimizeChatWindow: 'minimizeChatWindow',
    openConferenceChatWindow: 'openConferenceChatWindow',
  },
  conversationType:{
    chat:0,
    conferenceChat:1,
  },
  componentType: {
    map: 'map',
    grid: 'grid',
    tree: 'tree',
    summary: 'summary',
    form: 'form',
    touchSummary: 'touchSummary',
    pos: 'pos',
    editor: 'editor',
    media: 'media',
    overlaysMngr: 'overlaysMngr',
    edit_toolbar: 'editToolbar',
    chat: 'chat',
    queue: 'queue',
    card: 'card',
    imageThumbnails: 'imageThumbnails',
    notifications: 'notifications',
    media_window: 'mediaWindow',
    video_player: 'video_player',
    toolbar: 'toolbar',
    imagesThumbnails: 'imagesThumbnails',
    mapSearch: 'mapSearch',
    addOverlaysGroup: 'addOverlaysGroup',
    addOverlays: 'addOverlays',
    fastForm: 'fastForm',
    disconnectionPanel: 'disconnectionPanel',
    picture: 'picture',
    loadSnapshot: 'loadSnapshot',
    list: 'list',
    multiLists: 'multi-lists',
    recent: 'recent',
    filterForm: 'filterForm',
    advanceFilter: 'advanceFilter',
    confirmMessageComp: 'confirmMessageComp',
    editMultiLists: 'editMultiLists',
    doubleLayoutEditForm: 'doubleLayoutEditForm',
    entitySummaryHeader: 'entitySummaryHeader',
    verticalDisplay: 'verticalDisplay',
    recordAndReplay: 'recordAndReplay',
    timeline: 'timeline',
    formAndChatComp: 'formAndChatComp',
    tabs: 'tabs',
    headerDropDown: 'headerDropDown',
    slideShowPlayer: 'slideShowPlayer',
    conferenceChat: 'conferenceChat',
    datetimePickerPopup: 'datetimePickerPopup',
    loadingSpinner: 'loadingSpinner',
    frame: 'frame',
  },
  formType: {
    edit_form: 'edit-form',
    fast_form: 'fast-form',
    summary_form: 'summary-form',
    pos_form: 'pos-form',
    extended_summary_form: 'touch-form',
    chat_and_form: 'chat-and-form',
  },
  filterType: {
    appTags: 'appTags',
    clientValueSet: 'clientValueSet',
    serverLinkedEnt: 'serverLinkedEnt',
    serverValueSet: 'serverValueSet',
    areaFilter: 'areaFilter',
  },
  fieldType: {
    string: 'string',
    number: 'number',
    date: 'date',
    dateTime: 'datetime',
    timeSpan: 'timespan',
    valueSet: 'valueset',
    linkEntity: 'linkent',
    multiLinkEntity: '[linkent]',
    multiValueSet: '[valueset]',
    imageCarousel:'imagecarousel',
    multiString: '[string]',
    position: 'position',
    editCmds: 'editcmds',
    quickCmds: 'quickcmds',
    command: 'command',
    entity: 'entity',
    minimizeCombobox: 'minimizecombobox',
    boolean: 'boolean',
    timer: 'timer',
    counter: 'counter',
    tags: 'tags',
    multiBlock: '[block]',
    distance: 'distance',
    frequency: 'frequency',
    temperature: 'temperature',
    speed: 'speed',
    angle: 'angle',
    weight: 'weight',
    volume: 'volume',
    azimuth: 'azimuth',
    elevation: 'elevation'
  },
  positionType: {
    point: 'Point',
    polygon: 'Polygon',
    polyline: 'Polyline',
    ellipse: 'Ellipse',
    circle: 'Circle',
    arrow: 'Arrow',
    arc: 'Arc',
    sector: 'Sector',
    rectangle: 'Rectangle',
    corridor: 'Corridor',
    geocamera: 'GeoCamera',
  },
  posType: {
    point: 1,
    polyline: 2,
    polygon: 3,
    ellipse: 4,
    circle: 5,
    arrow: 6,
    arc: 7,
    sector: 8,
    rectangle: 8,
    corridor: 10,
    geocamera: 11,
  },
  sidebarTypes: {
    editorSidebar: 'editorSidebar',
    formSidebar: 'formSidebar',
    commandsSidebar: 'commandsSidebar',
  },
  transSource: {
    SERVER: 1,
    DISTRIB: 2,
    CLIENT: 3,
  },
  displayLayerType: {
    TEMP: 'tempDisplayLayer',
    CONST: 'constDisplayLayer',
  },
  appType: {
    TACTICAL: 'tactical',
    HEADQUATER: 'headquater',
  },
  overlayGroupQueryParamType: {
    select: 'select',
    text: 'text',
  },
  styleProperty: {
    bgColor: 'bgColor',
    fontColor: 'fontColor',
    color: 'color',
    fontSize: 'fontSize',
    fontStyle: 'fontStyle',
    fontFamily: 'fontFamily',
    backgroundColor: 'backgroundColor',
    iconSize: 'iconSize',
  },
  card: {
    BASIC_HEIGHT: '30',
    LINE_HEIGHT: '20',
  },
  callback: {
    editForm: 'appX.command.editForm',
    sendForm: 'appX.command.sendForm',
    cancelForm: 'appX.command.cancelForm',
  },
  PC_APP_NAME: 'policeAndCriminalApp',
  CRIME_EVENT_APP_NAME: 'crimeEventApp',
  ROUTES_APP_NAME: 'routesApp',
  ROUTES_CLASSIFICATION_APP_NAME: 'routesClassificationApp',
  BASE_APP_NAME: 'appX',
  GRAPH_APP_NAME: 'graphs',
};
